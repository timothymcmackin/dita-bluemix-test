This plugin has 6 goals:

ditaot:chm2web
  Convert DITA Open Toolkit's Microsoft CHM output file, produced by htmlhelp
  transtype, to pure HTML set of files. Require commercial chm2web utility from
  A!K Research Labs

  Available parameters:

    attach
      Controls whether this plugin tries to archive the output directory and
      attach archive to the project.

    attachClassifier
      Output file classifier to be attached to the project.

    attachType
      Output file extension to be attached to the project.

    chm2webExe


    descriptor
      Chm2Web configuration file

    ignoreIfChm2WebNotExist
      Allow skipping the conversion when chm2web is not available.

    outputDirectory
      Chm2Web output directory. Must match with the output directory found in
      your chm2web's descriptor file.

    skip
      Skip the execution

ditaot:eclipse
  Generate http://www.dita-op.org's Eclipse configuration to allow editing,
  previewing DITA under Eclipse IDE.

  Available parameters:

    projectName
      If given, will be added to Ant command line

    skip
      Skip the execution

ditaot:help
  Display help information on ditaot-maven-plugin.
  Call mvn ditaot:help -Ddetail=true -Dgoal=<goal-name> to display parameter
  details.

  Available parameters:

    detail
      If true, display all settable properties for each goal.

    goal
      The name of the goal for which to show help. If unspecified, all goals
      will be displayed.

    indentSize
      The number of spaces per indentation level, should be positive.

    lineLength
      The maximum length of a display line, should be positive.

ditaot:print-help
  Display DITA Open Toolkit's common Ant properties usage. This can be used a
  reference for antProperties used by dita:run goal.

  Available parameters:

    antProperties
      Ant key/value pair properties. Default properties for all dita's goals
      - dita.dir=${env.DITA_HOME}
      Default properties for dita:run goal
      - basedir=${project.basedir}
      - output.dir=${project.build.directory}/dita/out
      - dita.temp.dir=${project.build.directory}/dita/temp
      - args.logdir=${project.build.directory}/dita/log
      - args.input=${project.basedir}/src/main/dita/${artifactId}.ditamap

    skip
      Skip the execution

    useDitaClasspath
      Add jar files under DITA Open Toolkit's lib directory to execution
      classpath

ditaot:run
  Execute DITA Open Toolkit's Ant command line to transform DITA files to
  desired output format.

  Behind the scene, antProperties are temporarily stored under
  ${dita.temp.dir}/properties.temp to be used with

  ant -f ${dita.dir}/build.xml -propertyFile ${dita.temp.dir}/properties.temp

  Available parameters:

    antArguments
      If given, will be added to Ant command line. Use this for trouble shooting
      purpose

    antHome
      Point to Ant installation directory. If given, it will override useDitaAnt
      and ${env.ANT_HOME}

    antOpts
      Equivalent with ANT_OPTS environment. This parameter overrides the current
      env.ANT_OPTS if given. Typical usage is to setup JVM's heap space (
      example -Xmx500m )

    antProperties
      Ant key/value pair properties. Default properties for all dita's goals
      - dita.dir=${env.DITA_HOME}
      Default properties for dita:run goal
      - basedir=${project.basedir}
      - output.dir=${project.build.directory}/dita/out
      - dita.temp.dir=${project.build.directory}/dita/temp
      - args.logdir=${project.build.directory}/dita/log
      - args.input=${project.basedir}/src/main/dita/${artifactId}.ditamap

    attach
      Controls whether this goal tries to compress the output directory and
      attach compressed output file to the project for install and deploy
      purposes.

    attachClassifier
      Output file classifier to be attached to the project.

    attachType
      Output file extension to be attached to the project. When transtype is one
      of the pdf types or htmlhelp, the attachType will be hard coded to pdf and
      chm respectively.

    skip
      Skip the execution

    useDitaAnt
      Use DITA Open Toolkit's tools/ant

    useDitaClasspath
      Add jar files under DITA Open Toolkit's lib directory to execution
      classpath

ditaot:version
  Display DITA Open Toolkit's built-in version, with option to insert a custom
  version found under ${dita.dir}/ditaotVersionPath, via version property to
  Maven's ${versionName}. It is mainly used with maven-enforcer-plugin for build
  validation purpose.

  Available parameters:

    antProperties
      Ant key/value pair properties. Default properties for all dita's goals
      - dita.dir=${env.DITA_HOME}
      Default properties for dita:run goal
      - basedir=${project.basedir}
      - output.dir=${project.build.directory}/dita/out
      - dita.temp.dir=${project.build.directory}/dita/temp
      - args.logdir=${project.build.directory}/dita/log
      - args.input=${project.basedir}/src/main/dita/${artifactId}.ditamap

    displayDitaOTVersion
      Display DITA Open Toolkit's built-in version

    ditaotVersionPath
      Relative path to DITA-OT custom version properties file path

    skip
      Skip the execution

    useDitaClasspath
      Add jar files under DITA Open Toolkit's lib directory to execution
      classpath

    versionName
      Maven project property name to store custom version value
